基于操作系统真相还原实现的内核

目录：

 1. c2：实现主引导扇区MBR
 2. c3：实现MBR与显卡通信（通过显存），与硬盘通信（端口），实现内核加载器
 3. c4：打开保护模式，进入32位寻址，启用段机制
 4. c5：获取物理内存容量，启用页机制，实现第一个版本内核
 5. c6：实现自己的打印函数
 6. c7：打开时钟中断，实现一个简单的中断处理例程，初始化定时器，改变发送中断信号的频率
 7. c8：实现assert断言，实现字符串函数，实现虚拟内存管理系统
 8. c9：实现内核线程，实现多线程调度
 9. c10：实现基于信号量的锁，实现键盘驱动
10. c11：实现用户进程
11. c12：实现系统调用，实现库函数printf，完善堆内存管理（malloc，free）
12. c13：实现硬盘驱动
13. c14：实现文件系统
14. c15：系统交互

勘误：

Page 160：代码第27行DESC_VIDEO_HIGH4宏定义最低字节0x00改为0x0b

Page 196：将页表地址写入控制寄存器cr3改为将页目录表地址写入控制寄存器cr3

Page 204：执行info tab后的结果（图5-24），实际结果为
cr3:0x000000100000
0x00000000-0x000fffff -> 0x000000000000-0x0000000fffff
0xc0000000-0xc00fffff -> 0x000000000000-0x0000000fffff
0xffc00000-0xffc00fff -> 0x000000101000-0x000000101fff
0xfff00000-0xffffefff -> 0x000000101000-0x0000001fffff
0xfffff000-0xffffffff -> 0x000000100000-0x000000100fff

Page 219：程序的入口地址e_entry的值为0xc0001500（多处）

Page 355：代码中计时器端口宏定义修改为COUNTER0_PORT

Page 470：代码中第56行改为'0'加shift应该为')'

Page 507：代码中PCB内核栈指针加减法用法错误，但不影响运行，cur->self_kstack += sizeof(struct thread_stack) / sizeof(*cur->self_kstack)，如果修改的话注意thread.c里面对应的位置也要修改

Page 681：sys_getcwd函数768行，未释放io_buf

疑问：

为什么ucore和大象书都使用平坦模型，大象书连中断时段选择子的切换与恢复都省略了，本书没有利用页机制对内核空间进行保护，因为需要在用户态运行init进程，不能防止用户进程对3GB以上空间代码段和数据段的访问（如用户态进程可以直接调用sys_getpid），可能是为了实现上的方便
