; 主引导程序
; -----------------------------------------------------------
SECTION MBR vstart=0x7c00
	mov ax, cs
	mov ds, ax
	mov es, ax
	mov ss, ax
	mov fs, ax
	mov sp, 0x7c00
	mov ax, 0xb800
	mov gs, ax

; 清屏利用0x06号功能，上卷全部行，则可清屏。
; -----------------------------------------------------------
; INT 0x10  功能号：0x06  功能描述：上卷窗口
; -----------------------------------------------------------
; 输入：
; AH = 0x06（功能号）
; AL = 上卷的行数（如果为0，表示全部）
; BH = 上卷行属性
; (CL, CH) = 窗口左下角的(X, Y)位置
; (DL, DH) = 窗口右下角的(X, Y)位置
; 返回值：
; 无
	mov ax, 0x600
	mov bx, 0x700
	mov cx, 0         ; 左上角：(0, 0)
	mov dx, 0x184f    ; 右上角：(80, 25)，
                          ; VGA文本模式中，一行只能容纳80个字符，共25行。
                          ; 下标从0开始，0x18=24，0x4f=79
	int 0x10          ; int 0x10


;;; 打印字符串 ;;;
	; 输出背景色绿色，前景色红色，并且跳动的字符串"1 MBR"
	mov byte [gs:0x00], '1'
	mov byte [gs:0x01], 0xA4    ; A表示绿色背景闪烁，4表示前景色为红色
	
	mov byte [gs:0x02], ' '
	mov byte [gs:0x03], 0xA4

	mov byte [gs:0x04], 'M'
	mov byte [gs:0x05], 0xA4

	mov byte [gs:0x06], 'B'
	mov byte [gs:0x07], 0xA4

	mov byte [gs:0x08], 'R'
	mov byte [gs:0x09], 0xA4
;;; 打印字符串结束 ;;;

	jmp $                    ; 使程序悬停在此

	times 510-($-$$) db 0    ; $表示当前行的虚拟地址，$$表示当前section的虚拟起始地址，
                                 ; 目的是为了填充满512字节的主引导扇区
	db 0x55, 0xaa            ; 主引导扇区的标志，最后两个字节必须是0x55 & 0xaa
